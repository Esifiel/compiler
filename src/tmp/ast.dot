// Visualization of the Abstract Syntax Tree
digraph AST {
	graph [rankdir=LR]
	Program [label=Program]
	FunctionDeclaration [label=FunctionDeclaration]
	Program -> FunctionDeclaration
	IntType [label=IntType]
	FunctionDeclaration -> IntType
	Identifier [label=Identifier]
	FunctionDeclaration -> Identifier
	main [label=main]
	Identifier -> main
	CompoundStatement [label=CompoundStatement]
	FunctionDeclaration -> CompoundStatement
	VariableDeclaration [label=VariableDeclaration]
	CompoundStatement -> VariableDeclaration
	IntType7 [label=IntType]
	VariableDeclaration -> IntType7
	Identifier8 [label=Identifier]
	VariableDeclaration -> Identifier8
	a [label=a]
	Identifier8 -> a
	Number [label=Number]
	Identifier8 -> Number
	16 [label=16]
	Number -> 16
	Number12 [label=Number]
	Identifier8 -> Number12
	0 [label=0]
	Number12 -> 0
	VariableDeclaration14 [label=VariableDeclaration]
	CompoundStatement -> VariableDeclaration14
	IntType15 [label=IntType]
	VariableDeclaration14 -> IntType15
	Identifier16 [label=Identifier]
	VariableDeclaration14 -> Identifier16
	i [label=i]
	Identifier16 -> i
	ForStatement [label=ForStatement]
	CompoundStatement -> ForStatement
	Expression [label=Expression]
	ForStatement -> Expression
	Identifier20 [label=Identifier]
	Expression -> Identifier20
	i21 [label=i]
	Identifier20 -> i21
	op [label=op]
	Expression -> op
	"=" [label="="]
	op -> "="
	Number24 [label=Number]
	Expression -> Number24
	025 [label=0]
	Number24 -> 025
	Expression26 [label=Expression]
	ForStatement -> Expression26
	Identifier27 [label=Identifier]
	Expression26 -> Identifier27
	i28 [label=i]
	Identifier27 -> i28
	op29 [label=op]
	Expression26 -> op29
	"<" [label="<"]
	op29 -> "<"
	Number31 [label=Number]
	Expression26 -> Number31
	1632 [label=16]
	Number31 -> 1632
	Expression33 [label=Expression]
	ForStatement -> Expression33
	Identifier34 [label=Identifier]
	Expression33 -> Identifier34
	i35 [label=i]
	Identifier34 -> i35
	op36 [label=op]
	Expression33 -> op36
	"++" [label="++"]
	op36 -> "++"
	ExpressionStatement [label=ExpressionStatement]
	ForStatement -> ExpressionStatement
	FunctionCall [label=FunctionCall]
	ExpressionStatement -> FunctionCall
	Identifier40 [label=Identifier]
	FunctionCall -> Identifier40
	scanf [label=scanf]
	Identifier40 -> scanf
	String [label=String]
	FunctionCall -> String
	"%d" [label="%d"]
	String -> "%d"
	Expression44 [label=Expression]
	FunctionCall -> Expression44
	Expression45 [label=Expression]
	Expression44 -> Expression45
	Identifier46 [label=Identifier]
	Expression45 -> Identifier46
	a47 [label=a]
	Identifier46 -> a47
	op48 [label=op]
	Expression45 -> op48
	"[]" [label="[]"]
	op48 -> "[]"
	Identifier50 [label=Identifier]
	Expression45 -> Identifier50
	i51 [label=i]
	Identifier50 -> i51
	op52 [label=op]
	Expression44 -> op52
	"&" [label="&"]
	op52 -> "&"
	ForStatement54 [label=ForStatement]
	CompoundStatement -> ForStatement54
	Expression55 [label=Expression]
	ForStatement54 -> Expression55
	Identifier56 [label=Identifier]
	Expression55 -> Identifier56
	i57 [label=i]
	Identifier56 -> i57
	op58 [label=op]
	Expression55 -> op58
	"=59" [label="="]
	op58 -> "=59"
	Number60 [label=Number]
	Expression55 -> Number60
	061 [label=0]
	Number60 -> 061
	Expression62 [label=Expression]
	ForStatement54 -> Expression62
	Identifier63 [label=Identifier]
	Expression62 -> Identifier63
	i64 [label=i]
	Identifier63 -> i64
	op65 [label=op]
	Expression62 -> op65
	"<66" [label="<"]
	op65 -> "<66"
	Number67 [label=Number]
	Expression62 -> Number67
	1668 [label=16]
	Number67 -> 1668
	Expression69 [label=Expression]
	ForStatement54 -> Expression69
	Identifier70 [label=Identifier]
	Expression69 -> Identifier70
	i71 [label=i]
	Identifier70 -> i71
	op72 [label=op]
	Expression69 -> op72
	"++73" [label="++"]
	op72 -> "++73"
	ExpressionStatement74 [label=ExpressionStatement]
	ForStatement54 -> ExpressionStatement74
	FunctionCall75 [label=FunctionCall]
	ExpressionStatement74 -> FunctionCall75
	Identifier76 [label=Identifier]
	FunctionCall75 -> Identifier76
	printf [label=printf]
	Identifier76 -> printf
	String78 [label=String]
	FunctionCall75 -> String78
	"%d
" [label="%d
"]
	String78 -> "%d
"
	Expression80 [label=Expression]
	FunctionCall75 -> Expression80
	Identifier81 [label=Identifier]
	Expression80 -> Identifier81
	a82 [label=a]
	Identifier81 -> a82
	op83 [label=op]
	Expression80 -> op83
	"[]84" [label="[]"]
	op83 -> "[]84"
	Identifier85 [label=Identifier]
	Expression80 -> Identifier85
	i86 [label=i]
	Identifier85 -> i86
	ReturnStatement [label=ReturnStatement]
	CompoundStatement -> ReturnStatement
	Number88 [label=Number]
	ReturnStatement -> Number88
	089 [label=0]
	Number88 -> 089
}
