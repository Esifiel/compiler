digraph "CFG for 'quicksort' function" {
	label="CFG for 'quicksort' function";

	Node0x2006070 [shape=record,label="{entry:\l  %A1 = alloca i32*\l  store i32* %A, i32** %A1\l  %len2 = alloca i32\l  store i32 %len, i32* %len2\l  %i = alloca i32\l  %j = alloca i32\l  %pivot = alloca i32\l  %temp = alloca i32\l  br label %if.cond\l}"];
	Node0x2006070 -> Node0x2006b00;
	Node0x2006b00 [shape=record,label="{if.cond:                                          \l  %0 = load i32, i32* %len2\l  %1 = zext i32 %0 to i64\l  %2 = icmp slt i64 %1, 2\l  br i1 %2, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x2006b00:s0 -> Node0x2006da0;
	Node0x2006b00:s1 -> Node0x2006e50;
	Node0x2006da0 [shape=record,label="{if.then:                                          \l  ret void\l}"];
	Node0x2006e50 [shape=record,label="{if.else:                                          \l  %3 = load i32*, i32** %A1\l  %4 = load i32, i32* %len2\l  %5 = zext i32 %4 to i64\l  %6 = sdiv i64 %5, 2\l  %7 = getelementptr i32, i32* %3, i64 %6\l  %8 = load i32, i32* %7\l  store i32 %8, i32* %pivot\l  br label %for.init\l}"];
	Node0x2006e50 -> Node0x2006f40;
	Node0x2006f40 [shape=record,label="{for.init:                                         \l  store i32 0, i32* %i\l  %9 = load i32, i32* %len2\l  %10 = zext i32 %9 to i64\l  %11 = sub i64 %10, 1\l  %12 = trunc i64 %11 to i32\l  store i32 %12, i32* %j\l  br label %for.cond\l}"];
	Node0x2006f40 -> Node0x20076b0;
	Node0x20076b0 [shape=record,label="{for.cond:                                         \l  br label %for.loop\l}"];
	Node0x20076b0 -> Node0x20077f0;
	Node0x20077f0 [shape=record,label="{for.loop:                                         \l  br label %while.cond\l}"];
	Node0x20077f0 -> Node0x20078d0;
	Node0x20079b0 [shape=record,label="{for.end:                                          \l  %13 = load i32, i32* %i\l  %14 = add i32 %13, 1\l  store i32 %14, i32* %i\l  %15 = load i32, i32* %j\l  %16 = sub i32 %15, 1\l  store i32 %16, i32* %j\l  br label %for.cond\l}"];
	Node0x20079b0 -> Node0x20076b0;
	Node0x2007d20 [shape=record,label="{for.out:                                          \l  %17 = load i32*, i32** %A1\l  %18 = load i32, i32* %i\l  call void @quicksort(i32* %17, i32 %18)\l  %19 = load i32*, i32** %A1\l  %20 = load i32, i32* %i\l  %21 = getelementptr i32, i32* %19, i32 %20\l  %22 = load i32, i32* %i\l  %23 = load i32, i32* %len2\l  %24 = sub i32 %23, %22\l  call void @quicksort(i32* %21, i32 %24)\l  ret void\l}"];
	Node0x20078d0 [shape=record,label="{while.cond:                                       \l  %25 = load i32, i32* %pivot\l  %26 = load i32*, i32** %A1\l  %27 = load i32, i32* %i\l  %28 = getelementptr i32, i32* %26, i32 %27\l  %29 = load i32, i32* %28\l  %30 = icmp slt i32 %29, %25\l  br i1 %30, label %while.loop, label %while.out\l|{<s0>T|<s1>F}}"];
	Node0x20078d0:s0 -> Node0x2008530;
	Node0x20078d0:s1 -> Node0x2008610;
	Node0x2008530 [shape=record,label="{while.loop:                                       \l  %31 = load i32, i32* %i\l  %32 = add i32 %31, 1\l  store i32 %32, i32* %i\l  br label %while.cond\l}"];
	Node0x2008530 -> Node0x20078d0;
	Node0x2008610 [shape=record,label="{while.out:                                        \l  br label %while.cond3\l}"];
	Node0x2008610 -> Node0x2008a50;
	Node0x2008a50 [shape=record,label="{while.cond3:                                      \l  %33 = load i32, i32* %pivot\l  %34 = load i32*, i32** %A1\l  %35 = load i32, i32* %j\l  %36 = getelementptr i32, i32* %34, i32 %35\l  %37 = load i32, i32* %36\l  %38 = icmp sgt i32 %37, %33\l  br i1 %38, label %while.loop4, label %while.out5\l|{<s0>T|<s1>F}}"];
	Node0x2008a50:s0 -> Node0x2008d40;
	Node0x2008a50:s1 -> Node0x2008e20;
	Node0x2008d40 [shape=record,label="{while.loop4:                                      \l  %39 = load i32, i32* %j\l  %40 = sub i32 %39, 1\l  store i32 %40, i32* %j\l  br label %while.cond3\l}"];
	Node0x2008d40 -> Node0x2008a50;
	Node0x2008e20 [shape=record,label="{while.out5:                                       \l  br label %if.cond6\l}"];
	Node0x2008e20 -> Node0x2009050;
	Node0x2009050 [shape=record,label="{if.cond6:                                         \l  %41 = load i32, i32* %j\l  %42 = load i32, i32* %i\l  %43 = icmp sge i32 %42, %41\l  br i1 %43, label %if.then7, label %if.else8\l|{<s0>T|<s1>F}}"];
	Node0x2009050:s0 -> Node0x2009200;
	Node0x2009050:s1 -> Node0x2009600;
	Node0x2009200 [shape=record,label="{if.then7:                                         \l  br label %for.out\l}"];
	Node0x2009200 -> Node0x2007d20;
	Node0x2009600 [shape=record,label="{if.else8:                                         \l  %44 = load i32*, i32** %A1\l  %45 = load i32, i32* %i\l  %46 = getelementptr i32, i32* %44, i32 %45\l  %47 = load i32, i32* %46\l  store i32 %47, i32* %temp\l  %48 = load i32*, i32** %A1\l  %49 = load i32, i32* %i\l  %50 = getelementptr i32, i32* %48, i32 %49\l  %51 = load i32*, i32** %A1\l  %52 = load i32, i32* %j\l  %53 = getelementptr i32, i32* %51, i32 %52\l  %54 = load i32, i32* %53\l  store i32 %54, i32* %50\l  %55 = load i32*, i32** %A1\l  %56 = load i32, i32* %j\l  %57 = getelementptr i32, i32* %55, i32 %56\l  %58 = load i32, i32* %temp\l  store i32 %58, i32* %57\l  br label %for.end\l}"];
	Node0x2009600 -> Node0x20079b0;
}
