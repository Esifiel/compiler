digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x1907690 [shape=record,label="{entry:\l  %ma = alloca i32\l  %na = alloca i32\l  %mb = alloca i32\l  %nb = alloca i32\l  %i = alloca i32\l  %j = alloca i32\l  %k = alloca i32\l  %0 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x\l... i8]* @\"%d %d\", i32 0, i32 0), i32* %ma, i32* %na)\l  br label %for.init\l}"];
	Node0x1907690 -> Node0x1908580;
	Node0x1908580 [shape=record,label="{for.init:                                         \l  store i32 0, i32* %i\l  br label %for.cond\l}"];
	Node0x1908580 -> Node0x1908740;
	Node0x1908740 [shape=record,label="{for.cond:                                         \l  %1 = load i32, i32* %ma\l  %2 = load i32, i32* %i\l  %3 = icmp slt i32 %2, %1\l  br i1 %3, label %for.loop, label %for.out\l|{<s0>T|<s1>F}}"];
	Node0x1908740:s0 -> Node0x1908940;
	Node0x1908740:s1 -> Node0x1908a20;
	Node0x1908940 [shape=record,label="{for.loop:                                         \l  br label %for.init1\l}"];
	Node0x1908940 -> Node0x1908ad0;
	Node0x1908d50 [shape=record,label="{for.end:                                          \l  %4 = load i32, i32* %i\l  %5 = add i32 %4, 1\l  store i32 %5, i32* %i\l  br label %for.cond\l}"];
	Node0x1908d50 -> Node0x1908740;
	Node0x1908a20 [shape=record,label="{for.out:                                          \l  %6 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x\l... i8]* @\"%d %d\", i32 0, i32 0), i32* %mb, i32* %nb)\l  br label %for.init6\l}"];
	Node0x1908a20 -> Node0x19090c0;
	Node0x1908ad0 [shape=record,label="{for.init1:                                        \l  store i32 0, i32* %j\l  br label %for.cond2\l}"];
	Node0x1908ad0 -> Node0x19091f0;
	Node0x19091f0 [shape=record,label="{for.cond2:                                        \l  %7 = load i32, i32* %na\l  %8 = load i32, i32* %j\l  %9 = icmp slt i32 %8, %7\l  br i1 %9, label %for.loop3, label %for.out5\l|{<s0>T|<s1>F}}"];
	Node0x19091f0:s0 -> Node0x1908e00;
	Node0x19091f0:s1 -> Node0x1909430;
	Node0x1908e00 [shape=record,label="{for.loop3:                                        \l  %10 = load i32, i32* %i\l  %11 = getelementptr [30 x [40 x i32]], [30 x [40 x i32]]* @a, i32 0, i32 %10\l  %12 = load i32, i32* %j\l  %13 = getelementptr [40 x i32], [40 x i32]* %11, i32 0, i32 %12\l  %14 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x\l... i8]* @\"%d\", i32 0, i32 0), i32* %13)\l  br label %for.end4\l}"];
	Node0x1908e00 -> Node0x1909820;
	Node0x1909820 [shape=record,label="{for.end4:                                         \l  %15 = load i32, i32* %j\l  %16 = add i32 %15, 1\l  store i32 %16, i32* %j\l  br label %for.cond2\l}"];
	Node0x1909820 -> Node0x19091f0;
	Node0x1909430 [shape=record,label="{for.out5:                                         \l  br label %for.end\l}"];
	Node0x1909430 -> Node0x1908d50;
	Node0x19090c0 [shape=record,label="{for.init6:                                        \l  store i32 0, i32* %i\l  br label %for.cond7\l}"];
	Node0x19090c0 -> Node0x1909b30;
	Node0x1909b30 [shape=record,label="{for.cond7:                                        \l  %17 = load i32, i32* %mb\l  %18 = load i32, i32* %i\l  %19 = icmp slt i32 %18, %17\l  br i1 %19, label %for.loop8, label %for.out10\l|{<s0>T|<s1>F}}"];
	Node0x1909b30:s0 -> Node0x1909ce0;
	Node0x1909b30:s1 -> Node0x1909dc0;
	Node0x1909ce0 [shape=record,label="{for.loop8:                                        \l  br label %for.init11\l}"];
	Node0x1909ce0 -> Node0x1909ea0;
	Node0x1909f80 [shape=record,label="{for.end9:                                         \l  %20 = load i32, i32* %i\l  %21 = add i32 %20, 1\l  store i32 %21, i32* %i\l  br label %for.cond7\l}"];
	Node0x1909f80 -> Node0x1909b30;
	Node0x1909dc0 [shape=record,label="{for.out10:                                        \l  br label %if.cond\l}"];
	Node0x1909dc0 -> Node0x190a1b0;
	Node0x1909ea0 [shape=record,label="{for.init11:                                       \l  store i32 0, i32* %j\l  br label %for.cond12\l}"];
	Node0x1909ea0 -> Node0x190a600;
	Node0x190a600 [shape=record,label="{for.cond12:                                       \l  %22 = load i32, i32* %nb\l  %23 = load i32, i32* %j\l  %24 = icmp slt i32 %23, %22\l  br i1 %24, label %for.loop13, label %for.out15\l|{<s0>T|<s1>F}}"];
	Node0x190a600:s0 -> Node0x190a7b0;
	Node0x190a600:s1 -> Node0x190a890;
	Node0x190a7b0 [shape=record,label="{for.loop13:                                       \l  %25 = load i32, i32* %i\l  %26 = getelementptr [30 x [40 x i32]], [30 x [40 x i32]]* @b, i32 0, i32 %25\l  %27 = load i32, i32* %j\l  %28 = getelementptr [40 x i32], [40 x i32]* %26, i32 0, i32 %27\l  %29 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x\l... i8]* @\"%d\", i32 0, i32 0), i32* %28)\l  br label %for.end14\l}"];
	Node0x190a7b0 -> Node0x190acb0;
	Node0x190acb0 [shape=record,label="{for.end14:                                        \l  %30 = load i32, i32* %j\l  %31 = add i32 %30, 1\l  store i32 %31, i32* %j\l  br label %for.cond12\l}"];
	Node0x190acb0 -> Node0x190a600;
	Node0x190a890 [shape=record,label="{for.out15:                                        \l  br label %for.end9\l}"];
	Node0x190a890 -> Node0x1909f80;
	Node0x190a1b0 [shape=record,label="{if.cond:                                          \l  %32 = load i32, i32* %mb\l  %33 = load i32, i32* %na\l  %34 = icmp ne i32 %33, %32\l  br i1 %34, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x190a1b0:s0 -> Node0x190b220;
	Node0x190a1b0:s1 -> Node0x190b2d0;
	Node0x190b220 [shape=record,label="{if.then:                                          \l  %35 = call i32 @puts(i8* getelementptr inbounds ([24 x i8], [24 x i8]*\l... @\"Incompatible Dimensions\", i32 0, i32 0))\l  br label %if.out\l}"];
	Node0x190b220 -> Node0x190b600;
	Node0x190b2d0 [shape=record,label="{if.else:                                          \l  br label %for.init16\l}"];
	Node0x190b2d0 -> Node0x190b6b0;
	Node0x190b600 [shape=record,label="{if.out:                                           \l  br label %for.init31\l}"];
	Node0x190b600 -> Node0x190b760;
	Node0x190b6b0 [shape=record,label="{for.init16:                                       \l  store i32 0, i32* %i\l  br label %for.cond17\l}"];
	Node0x190b6b0 -> Node0x190b890;
	Node0x190b890 [shape=record,label="{for.cond17:                                       \l  %36 = load i32, i32* %ma\l  %37 = load i32, i32* %i\l  %38 = icmp slt i32 %37, %36\l  br i1 %38, label %for.loop18, label %for.out20\l|{<s0>T|<s1>F}}"];
	Node0x190b890:s0 -> Node0x190ba40;
	Node0x190b890:s1 -> Node0x190bb20;
	Node0x190ba40 [shape=record,label="{for.loop18:                                       \l  br label %for.init21\l}"];
	Node0x190ba40 -> Node0x190c4a0;
	Node0x190c580 [shape=record,label="{for.end19:                                        \l  %39 = load i32, i32* %i\l  %40 = add i32 %39, 1\l  store i32 %40, i32* %i\l  br label %for.cond17\l}"];
	Node0x190c580 -> Node0x190b890;
	Node0x190bb20 [shape=record,label="{for.out20:                                        \l  br label %if.out\l}"];
	Node0x190bb20 -> Node0x190b600;
	Node0x190c4a0 [shape=record,label="{for.init21:                                       \l  store i32 0, i32* %j\l  br label %for.cond22\l}"];
	Node0x190c4a0 -> Node0x190c830;
	Node0x190c830 [shape=record,label="{for.cond22:                                       \l  %41 = load i32, i32* %nb\l  %42 = load i32, i32* %j\l  %43 = icmp slt i32 %42, %41\l  br i1 %43, label %for.loop23, label %for.out25\l|{<s0>T|<s1>F}}"];
	Node0x190c830:s0 -> Node0x190c9e0;
	Node0x190c830:s1 -> Node0x190cac0;
	Node0x190c9e0 [shape=record,label="{for.loop23:                                       \l  %44 = load i32, i32* %i\l  %45 = getelementptr [30 x [40 x i32]], [30 x [40 x i32]]* @c, i32 0, i32 %44\l  %46 = load i32, i32* %j\l  %47 = getelementptr [40 x i32], [40 x i32]* %45, i32 0, i32 %46\l  store i32 0, i32* %47\l  br label %for.init26\l}"];
	Node0x190c9e0 -> Node0x190ce50;
	Node0x190cf90 [shape=record,label="{for.end24:                                        \l  %48 = load i32, i32* %j\l  %49 = add i32 %48, 1\l  store i32 %49, i32* %j\l  br label %for.cond22\l}"];
	Node0x190cf90 -> Node0x190c830;
	Node0x190cac0 [shape=record,label="{for.out25:                                        \l  br label %for.end19\l}"];
	Node0x190cac0 -> Node0x190c580;
	Node0x190ce50 [shape=record,label="{for.init26:                                       \l  store i32 0, i32* %k\l  br label %for.cond27\l}"];
	Node0x190ce50 -> Node0x190d240;
	Node0x190d240 [shape=record,label="{for.cond27:                                       \l  %50 = load i32, i32* %na\l  %51 = load i32, i32* %k\l  %52 = icmp slt i32 %51, %50\l  br i1 %52, label %for.loop28, label %for.out30\l|{<s0>T|<s1>F}}"];
	Node0x190d240:s0 -> Node0x190d3f0;
	Node0x190d240:s1 -> Node0x190d4d0;
	Node0x190d3f0 [shape=record,label="{for.loop28:                                       \l  %53 = load i32, i32* %i\l  %54 = getelementptr [30 x [40 x i32]], [30 x [40 x i32]]* @c, i32 0, i32 %53\l  %55 = load i32, i32* %j\l  %56 = getelementptr [40 x i32], [40 x i32]* %54, i32 0, i32 %55\l  %57 = load i32, i32* %56\l  %58 = load i32, i32* %k\l  %59 = getelementptr [30 x [40 x i32]], [30 x [40 x i32]]* @b, i32 0, i32 %58\l  %60 = load i32, i32* %j\l  %61 = getelementptr [40 x i32], [40 x i32]* %59, i32 0, i32 %60\l  %62 = load i32, i32* %61\l  %63 = load i32, i32* %i\l  %64 = getelementptr [30 x [40 x i32]], [30 x [40 x i32]]* @a, i32 0, i32 %63\l  %65 = load i32, i32* %k\l  %66 = getelementptr [40 x i32], [40 x i32]* %64, i32 0, i32 %65\l  %67 = load i32, i32* %66\l  %68 = mul i32 %67, %62\l  %69 = add i32 %57, %68\l  store i32 %69, i32* %56\l  br label %for.end29\l}"];
	Node0x190d3f0 -> Node0x190de60;
	Node0x190de60 [shape=record,label="{for.end29:                                        \l  %70 = load i32, i32* %k\l  %71 = add i32 %70, 1\l  store i32 %71, i32* %k\l  br label %for.cond27\l}"];
	Node0x190de60 -> Node0x190d240;
	Node0x190d4d0 [shape=record,label="{for.out30:                                        \l  br label %for.end24\l}"];
	Node0x190d4d0 -> Node0x190cf90;
	Node0x190b760 [shape=record,label="{for.init31:                                       \l  store i32 0, i32* %i\l  br label %for.cond32\l}"];
	Node0x190b760 -> Node0x190e170;
	Node0x190e170 [shape=record,label="{for.cond32:                                       \l  %72 = load i32, i32* %ma\l  %73 = load i32, i32* %i\l  %74 = icmp slt i32 %73, %72\l  br i1 %74, label %for.loop33, label %for.out35\l|{<s0>T|<s1>F}}"];
	Node0x190e170:s0 -> Node0x190e940;
	Node0x190e170:s1 -> Node0x190ea20;
	Node0x190e940 [shape=record,label="{for.loop33:                                       \l  br label %for.init36\l}"];
	Node0x190e940 -> Node0x190eb90;
	Node0x190ec70 [shape=record,label="{for.end34:                                        \l  %75 = load i32, i32* %i\l  %76 = add i32 %75, 1\l  store i32 %76, i32* %i\l  br label %for.cond32\l}"];
	Node0x190ec70 -> Node0x190e170;
	Node0x190ea20 [shape=record,label="{for.out35:                                        \l  ret i32 0\l}"];
	Node0x190eb90 [shape=record,label="{for.init36:                                       \l  store i32 0, i32* %j\l  br label %for.cond37\l}"];
	Node0x190eb90 -> Node0x190ef20;
	Node0x190ef20 [shape=record,label="{for.cond37:                                       \l  %77 = load i32, i32* %nb\l  %78 = load i32, i32* %j\l  %79 = icmp slt i32 %78, %77\l  br i1 %79, label %for.loop38, label %for.out40\l|{<s0>T|<s1>F}}"];
	Node0x190ef20:s0 -> Node0x190f0d0;
	Node0x190ef20:s1 -> Node0x190f1b0;
	Node0x190f0d0 [shape=record,label="{for.loop38:                                       \l  %80 = load i32, i32* %i\l  %81 = getelementptr [30 x [40 x i32]], [30 x [40 x i32]]* @c, i32 0, i32 %80\l  %82 = load i32, i32* %j\l  %83 = getelementptr [40 x i32], [40 x i32]* %81, i32 0, i32 %82\l  %84 = load i32, i32* %83\l  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x\l... i8]* @\"%10d\", i32 0, i32 0), i32 %84)\l  br label %for.end39\l}"];
	Node0x190f0d0 -> Node0x190f6b0;
	Node0x190f6b0 [shape=record,label="{for.end39:                                        \l  %86 = load i32, i32* %j\l  %87 = add i32 %86, 1\l  store i32 %87, i32* %j\l  br label %for.cond37\l}"];
	Node0x190f6b0 -> Node0x190ef20;
	Node0x190f1b0 [shape=record,label="{for.out40:                                        \l  %88 = call i32 @puts(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i32\l... 0, i32 0))\l  br label %for.end34\l}"];
	Node0x190f1b0 -> Node0x190ec70;
}
